replicas: 3

crds:
  enabled: true
  keep: true

# Specifies whether Leader Election resources should be created
leaderElection:
 enabled: true
#  leaseDuration: 15s
#  renewDeadline: 10s
#  retryPeriod: 2s
#  resourceLock: "leases"
#  resourceName: "kubedns-shepherd.io"

extraArgs: []
# --key1=val1
# --key2

image:
  repository: ghcr.io/eminaktas/kubedns-shepherd
  tag: ""

imagePullPolicy: IfNotPresent

prometheus:
  enabled: false
  port: 8080
  serviceMonitor:
    enabled: false
    labels: {}
    annotations: {}
    interval: "10s"
    relabelings: ~
    metricRelabelings: ~

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL

resources:
  limits:
    cpu: 500m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 64Mi

podSecurityContext:
  runAsNonRoot: true

serviceAccount:
  annotations: {}

imagePullSecrets: []

certmanager:
  enabled: false
  crds:
    enabled: true
    keep: true

dnsclass:
  enabled: false
  disabledNamespaces:
    - kube-system
  allowedNamespaces: []
  allowedDNSPolicies:
    - None
    - ClusterFirst
    - ClusterFirstWithHostNet
  dnsPolicy: None
  # dnsConfig supports templating for dynamic configuration.
  # For more details on how to use templating with dnsConfig,
  # please refer to the documentation:
  # https://github.com/eminaktas/kubedns-shepherd?tab=readme-ov-file#dynamic-configuration-in-dnsclass
  dnsConfig:
    nameservers:
      - 10.96.0.10
    searches:
      - "svc.{{ .clusterDomain }}"
      - "{{ .podNamespace }}.svc.{{ .clusterDomain }}"
    options:
      - name: ndots
        value: "2"
      - name: edns0

readyCheck:
  maxRetries: 12
  sleepInterval: 10
