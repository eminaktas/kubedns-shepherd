name: Release

permissions: {}

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0
      - name: Get Previous Tag
        id: get_previous_tag
        run: |
          # Get the latest tag, which could be an RC or a production tag
          latest_tag=$(git for-each-ref --sort=-creatordate --format='%(refname:short)' 'refs/tags/*' | head -n 1)

          if [[ $latest_tag == *-rc* ]]; then
            # If latest tag is an RC, find the latest production tag
            previous_tag=$(git for-each-ref --sort=-creatordate --format='%(refname:short)' --exclude='refs/tags/*-rc*' 'refs/tags/*' | head -n 1)
          else
            # If latest tag is production, find the tag just before it (also production)
            previous_tag=$(git for-each-ref --sort=-creatordate --format='%(refname:short)' --exclude='refs/tags/*-rc*' 'refs/tags/*' | grep -A1 "^$latest_tag$" | tail -n 1)
          fi

          echo "Previous tag selected: $previous_tag"
          echo "PREVIOUS_TAG=$previous_tag" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --timeout 90m
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_PREVIOUS_TAG: ${{ env.PREVIOUS_TAG }}
      - name: Publish Helm charts
        uses: stefanprodan/helm-gh-pages@master
        with:
          charts_dir: chart
          token: ${{ secrets.GITHUB_TOKEN }}
