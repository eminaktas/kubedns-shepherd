apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: kubedns-shepherd
    control-plane: controller-manager
  {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if gt (.Values.replicas | int) 1 }}
  {{- if not .Values.leaderElection.enabled }}
  {{- fail "You must set leaderElection to use more than 1 replica"}}
  {{- end}}
  replicas: {{ required "leaderElection required for running more than one replica" .Values.replicas }}
  {{- else }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: controller
        {{- if and .Values.prometheus.enabled (not .Values.prometheus.serviceMonitor.enabled) }}
        prometheus.io/port: {{ .Values.prometheus.port | quote }}
        prometheus.io/scrape: "true"
        {{- end }}
    spec:
      containers:
      - args:
        {{- if .Values.prometheus.enabled }}
        - --metrics-bind-address=:{{ .Values.prometheus.port }}
        {{- end }}
        {{- include "kubedns-shepherd.leaderElection" . | nindent 8 }}
        {{- with .Values.extraArgs }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        name: controller
        ports:
        - containerPort: 9443
          name: webhook
          protocol: TCP
        {{- if .Values.prometheus.enabled }}
        - containerPort: {{ .Values.prometheus.port }}
          name: metrics
          protocol: TCP
        {{- end }}
        - containerPort: 8081
          name: probe
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: probe
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: probe
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.containerSecurityContext | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      imagePullSecrets: {{ .Values.imagePullSecrets | default list | toJson }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "chart.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ include "chart.fullname" . }}-webhook-server-cert
